{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   age     sex     bmi children smoker     region      charges\n",
      "0   19  female  27.900        0    yes  southwest  16884.92400\n",
      "1   18    male  33.770        1     no  southeast   1725.55230\n",
      "2   28    male  33.000        3     no  southeast   4449.46200\n",
      "3   33    male  22.705        0     no  northwest  21984.47061\n",
      "4   32    male  28.880        0     no  northwest   3866.85520\n"
     ]
    }
   ],
   "source": [
    "import pyodbc\n",
    "import pandas as pd\n",
    "server = 'PARIANGEL' \n",
    "database = 'MyHealthcare' \n",
    "cnxn = pyodbc.connect(Trusted_connection='Yes',DRIVER='{SQL Server}',SERVER=server,DATABASE=database)\n",
    "cursor = cnxn.cursor()\n",
    "# select 26 rows from SQL table to insert in dataframe.\n",
    "query = \"SELECT *  FROM [MyHealthcare].[dbo].[Individual_Data];\"\n",
    "df = pd.read_sql(query, cnxn)\n",
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1338, 7)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1338.000000</td>\n",
       "      <td>1338</td>\n",
       "      <td>1338.000000</td>\n",
       "      <td>1338</td>\n",
       "      <td>1338</td>\n",
       "      <td>1338</td>\n",
       "      <td>1338.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>NaN</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>NaN</td>\n",
       "      <td>676</td>\n",
       "      <td>NaN</td>\n",
       "      <td>574</td>\n",
       "      <td>1064</td>\n",
       "      <td>364</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>39.207025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30.663397</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13270.422265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>14.049960</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.098187</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12110.011237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15.960000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1121.873900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>27.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26.296250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4740.287150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30.400000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9382.033000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34.693750</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16639.912515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>64.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>53.130000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>63770.428010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                age   sex          bmi children smoker     region  \\\n",
       "count   1338.000000  1338  1338.000000     1338   1338       1338   \n",
       "unique          NaN     2          NaN        6      2          4   \n",
       "top             NaN  male          NaN        0     no  southeast   \n",
       "freq            NaN   676          NaN      574   1064        364   \n",
       "mean      39.207025   NaN    30.663397      NaN    NaN        NaN   \n",
       "std       14.049960   NaN     6.098187      NaN    NaN        NaN   \n",
       "min       18.000000   NaN    15.960000      NaN    NaN        NaN   \n",
       "25%       27.000000   NaN    26.296250      NaN    NaN        NaN   \n",
       "50%       39.000000   NaN    30.400000      NaN    NaN        NaN   \n",
       "75%       51.000000   NaN    34.693750      NaN    NaN        NaN   \n",
       "max       64.000000   NaN    53.130000      NaN    NaN        NaN   \n",
       "\n",
       "             charges  \n",
       "count    1338.000000  \n",
       "unique           NaN  \n",
       "top              NaN  \n",
       "freq             NaN  \n",
       "mean    13270.422265  \n",
       "std     12110.011237  \n",
       "min      1121.873900  \n",
       "25%      4740.287150  \n",
       "50%      9382.033000  \n",
       "75%     16639.912515  \n",
       "max     63770.428010  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1= pd.get_dummies(data=df, columns=['sex','smoker','region'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>charges</th>\n",
       "      <th>sex_female</th>\n",
       "      <th>sex_male</th>\n",
       "      <th>smoker_no</th>\n",
       "      <th>smoker_yes</th>\n",
       "      <th>region_northeast</th>\n",
       "      <th>region_northwest</th>\n",
       "      <th>region_southeast</th>\n",
       "      <th>region_southwest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0</td>\n",
       "      <td>16884.92400</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18</td>\n",
       "      <td>33.770</td>\n",
       "      <td>1</td>\n",
       "      <td>1725.55230</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3</td>\n",
       "      <td>4449.46200</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0</td>\n",
       "      <td>21984.47061</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0</td>\n",
       "      <td>3866.85520</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age     bmi children      charges  sex_female  sex_male  smoker_no  \\\n",
       "0   19  27.900        0  16884.92400           1         0          0   \n",
       "1   18  33.770        1   1725.55230           0         1          1   \n",
       "2   28  33.000        3   4449.46200           0         1          1   \n",
       "3   33  22.705        0  21984.47061           0         1          1   \n",
       "4   32  28.880        0   3866.85520           0         1          1   \n",
       "\n",
       "   smoker_yes  region_northeast  region_northwest  region_southeast  \\\n",
       "0           1                 0                 0                 0   \n",
       "1           0                 0                 0                 1   \n",
       "2           0                 0                 0                 1   \n",
       "3           0                 0                 1                 0   \n",
       "4           0                 0                 1                 0   \n",
       "\n",
       "   region_southwest  \n",
       "0                 1  \n",
       "1                 0  \n",
       "2                 0  \n",
       "3                 0  \n",
       "4                 0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                   int64\n",
       "bmi                 float64\n",
       "children             object\n",
       "charges             float64\n",
       "sex_female            uint8\n",
       "sex_male              uint8\n",
       "smoker_no             uint8\n",
       "smoker_yes            uint8\n",
       "region_northeast      uint8\n",
       "region_northwest      uint8\n",
       "region_southeast      uint8\n",
       "region_southwest      uint8\n",
       "dtype: object"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1=df1.astype(float)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1884829b4c8>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(df1.corr())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1884848c348>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.scatter(x='age',y='charges',data=df1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x188483d7688>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x='bmi',y='charges',data=df1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x188484f8648>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x='children',y='charges',data=df1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x18848563908>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYMAAAD4CAYAAAAO9oqkAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAVsElEQVR4nO3df6zd9X3f8ecL2yROG2ISTAQ2q6nqOiGoCcQiriJ1TaiwoVNsVWEiWocboVlipOq2yhvZ/qBJmiqdtWVDStN6xYuJ2hLGUnAz0jsLiLJNgXAzJxAglm9JCtdm8W2NWVZIYsx7f5yPycE+1/dc33vuD5/nQzo63+/7+znf8/ngy33d8/18v9+TqkKSNNzOme8OSJLmn2EgSTIMJEmGgSQJw0CSBCyd7w6cqQsuuKDWrFkz392QpEXjG9/4xt9U1cpe2xZtGKxZs4bR0dH57oYkLRpJ/nqybR4mkiQZBpIkw0CShGEgScIwkCSxiM8mkqSz3b37DrJjZD+Hjr7ExSuWs33jOrZcsWog72UYSNICdO++g3z0i4/z0rHjABw8+hIf/eLjAAMJBA8TSdICtGNk/6tBcMJLx46zY2T/QN7PMJCkBejQ0ZemVZ8pw0CSFqCLVyyfVn2mDANJWoDe97aetxCatD5ThoEkLUAPfWdiWvWZMgwkaQFyzkCS5JyBJAm2b1zH8mVLXlNbvmwJ2zeuG8j7edGZJC1AJy4s8wpkSRpyW65YNbBf/ifr6zBRkhVJ7knynSRPJfnFJG9OsjfJgfZ8fmubJLcnGUvyWJIru/aztbU/kGRrV/3dSR5vr7k9SWZ/qJK0uNy77yDv/dSDXHrrf+O9n3qQe/cdHNh79Ttn8B+Bv6yqtwHvBJ4CbgUeqKq1wANtHeBaYG17bAM+C5DkzcBtwHuAq4DbTgRIa7Ot63WbZjYsSVrcTtyb6ODRlyh+cm+iQQXClGGQ5Dzgl4A7AKrqx1V1FNgM7G7NdgNb2vJm4M7qeBhYkeQiYCOwt6qOVNXzwF5gU9t2XlV9raoKuLNrX5I0lBbivYl+FpgA/nOSfUn+OMlPAW+tqucA2vOFrf0q4Nmu14+32unq4z3qp0iyLcloktGJicFceCFJC8FCvM5gKXAl8NmqugL4O35ySKiXXsf76wzqpxardlbV+qpav3LlYC7JlqSFYCFeZzAOjFfVI239Hjrh8P12iIf2fLir/SVdr18NHJqivrpHXZKG1vaN61i25LV/Ky9bkoFdZzBlGFTV/wGeTXKiB1cDTwJ7gBNnBG0F7mvLe4Ab21lFG4AX2mGkEeCaJOe3ieNrgJG27QdJNrSziG7s2pckDa+Tj5H0PGYyO/q9zuA3gT9Jci7wNPBhOkFyd5KbgGeA61vb+4HrgDHgxdaWqjqS5BPAo63dx6vqSFu+GfgcsBz4cntI0tDaMbKfY6+89rf/sVeKHSP7B3LtQV9hUFXfBNb32HR1j7YF3DLJfnYBu3rUR4HL++mLJA2DhTiBLEmaYwtxAlmSNMe8UZ0kyRvVSZI6FtyN6iRJZzfDQJLkYSJJWqju3XfQOQNJGmYnbmF94s6lJ25hDQwkEDxMJEkL0EK8hbUkaY55BbIkySuQJUlegSxJwiuQJUmNVyBLkuaUnwwkaYHyojNJGnJedCZJ8qIzSZIXnUmS8KIzSRLwvretnFZ9pgwDSVqAHvrOxLTqM2UYSNICtCDnDJJ8L8njSb6ZZLTV3pxkb5ID7fn8Vk+S25OMJXksyZVd+9na2h9IsrWr/u62/7H22sz2QCVpMVnIcwbvq6p3VdX6tn4r8EBVrQUeaOsA1wJr22Mb8FnohAdwG/Ae4CrgthMB0tps63rdpjMekSSdBbZvXMeyc177d/GyczKwG9XN5DDRZmB3W94NbOmq31kdDwMrklwEbAT2VtWRqnoe2AtsatvOq6qvVVUBd3btS5KG18nHSAZ4zKTfMCjgvyf5RpJtrfbWqnoOoD1f2OqrgGe7Xjveaqerj/eonyLJtiSjSUYnJgYziSJJC8GOkf0cO16vqR07XgO76Kzf21G8t6oOJbkQ2JvkO6dp2yu76gzqpxardgI7AdavX9+zjSSdDQ5OMlE8WX2m+vpkUFWH2vNh4M/pHPP/fjvEQ3s+3JqPA5d0vXw1cGiK+uoedUnSHJkyDJL8VJI3nlgGrgG+DewBTpwRtBW4ry3vAW5sZxVtAF5oh5FGgGuSnN8mjq8BRtq2HyTZ0M4iurFrX5KkOdDPYaK3An/ezvZcCvxpVf1lkkeBu5PcBDwDXN/a3w9cB4wBLwIfBqiqI0k+ATza2n28qo605ZuBzwHLgS+3hyRpjkwZBlX1NPDOHvW/Ba7uUS/glkn2tQvY1aM+ClzeR38lSQPgFciSJMNAkmQYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEtMIgyRLkuxL8qW2fmmSR5IcSPKFJOe2+uva+ljbvqZrHx9t9f1JNnbVN7XaWJJbZ294kqR+TOeTwW8BT3Wt/z7w6apaCzwP3NTqNwHPV9XPAZ9u7UhyGXAD8A5gE/AHLWCWAJ8BrgUuAz7U2kqS5khfYZBkNfCrwB+39QDvB+5pTXYDW9ry5rZO2351a78ZuKuqflRV3wXGgKvaY6yqnq6qHwN3tbaSpDnS7yeD/wD8S+CVtv4W4GhVvdzWx4FVbXkV8CxA2/5Ca/9q/aTXTFY/RZJtSUaTjE5MTPTZdUnSVKYMgyT/ADhcVd/oLvdoWlNsm2791GLVzqpaX1XrV65ceZpeS5KmY2kfbd4LfCDJdcDrgfPofFJYkWRp++t/NXCotR8HLgHGkywF3gQc6aqf0P2ayeqSpDkw5SeDqvpoVa2uqjV0JoAfrKp/BDwEfLA12wrc15b3tHXa9gerqlr9hna20aXAWuDrwKPA2nZ20rntPfbMyugkSX3p55PBZP4VcFeS3wX2AXe0+h3A55OM0flEcANAVT2R5G7gSeBl4JaqOg6Q5CPACLAE2FVVT8ygX5KkaZpWGFTVV4CvtOWn6ZwJdHKbHwLXT/L6TwKf7FG/H7h/On2RJM0er0CWJM3oMNGide++g+wY2c+hoy9x8YrlbN+4ji1X9DybVZKGwtCFwb37DrL9nm9x7Hjn7NWDR19i+z3fAjAQJA2toTtM9LG/eOLVIDjh2PHiY3/hnLWk4TV0YfD8i8emVZekYTB0YSBJOtXQhcGK5cumVZekYTB0YfA7H3gH55x0N6Rz0qlL0rAaujAAWJKcdl2Shs3QhcGOkf0ce+Wks4leKXaM7J+nHknS/Bu6MDh09KVp1SVpGAxdGFy8Yvm06pI0DIYuDLZvXMeyk2aQl50Ttm9cN089kqT5N3RhAJz63WrOH0sackMXBjtG9ve8HYUTyJKG2dCFgRPIknSqoQsDJ5Al6VRDFwbve9vKadUlaRgMXRg89J2JadUlaRgMXRgcnGRuYLK6JM2HNyzr/et5svpMDV0YTHYfIu9PJGkh+b1f+4WeZ8H/3q/9wkDeb+jC4HjVtOqSNF+WnnSB7Mnrs2nowmDVJGcNTVaXpPkw1zfVnDIMkrw+ydeTfCvJE0k+1uqXJnkkyYEkX0hybqu/rq2Pte1ruvb10Vbfn2RjV31Tq40luXX2h/kTbzh3kuNwk9QlaT7M9fxmP78BfwS8v6reCbwL2JRkA/D7wKerai3wPHBTa38T8HxV/Rzw6daOJJcBNwDvADYBf5BkSZIlwGeAa4HLgA+1tgNx4PDfTasuSfNhruc3pwyD6vh/bXVZexTwfuCeVt8NbGnLm9s6bfvVSdLqd1XVj6rqu8AYcFV7jFXV01X1Y+Cu1laShtZcz2/2dWyk/QX/TeAwsBf4K+BoVb3cmowDq9ryKuBZgLb9BeAt3fWTXjNZvVc/tiUZTTI6MeF1AZLOXpP9/T+oKeS+wqCqjlfVu4DVdP6Sf3uvZu25V1/rDOq9+rGzqtZX1fqVK71iWNLZa7K//wd13uO0Zk2r6ijwFWADsCLJ0rZpNXCoLY8DlwC07W8CjnTXT3rNZHVJ0hzp52yilUlWtOXlwK8ATwEPAR9szbYC97XlPW2dtv3BqqpWv6GdbXQpsBb4OvAosLadnXQunUnmPbMxOElSf5ZO3YSLgN3trJ9zgLur6ktJngTuSvK7wD7gjtb+DuDzScbofCK4AaCqnkhyN/Ak8DJwS1UdB0jyEWAEWALsqqonZm2EkqQpTRkGVfUYcEWP+tN05g9Orv8QuH6SfX0S+GSP+v3A/X30V5KGwpLA8R4TBEsGNIPslVaStAD1CoLT1WfKMJAkGQaSJMNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCTRRxgkuSTJQ0meSvJEkt9q9Tcn2ZvkQHs+v9WT5PYkY0keS3Jl1762tvYHkmztqr87yePtNbcnySAGK0nqrZ9PBi8Dv11Vbwc2ALckuQy4FXigqtYCD7R1gGuBte2xDfgsdMIDuA14D3AVcNuJAGlttnW9btPMhyZJ6teUYVBVz1XV/27LPwCeAlYBm4HdrdluYEtb3gzcWR0PAyuSXARsBPZW1ZGqeh7YC2xq286rqq9VVQF3du1LkjQHpjVnkGQNcAXwCPDWqnoOOoEBXNiarQKe7XrZeKudrj7eo97r/bclGU0yOjExMZ2uS5JOo+8wSPLTwH8F/llV/d/TNe1RqzOon1qs2llV66tq/cqVK6fqsiSpT32FQZJldILgT6rqi638/XaIh/Z8uNXHgUu6Xr4aODRFfXWPuiRpjvRzNlGAO4Cnqurfd23aA5w4I2grcF9X/cZ2VtEG4IV2GGkEuCbJ+W3i+BpgpG37QZIN7b1u7NqXJGkOLO2jzXuBfww8nuSbrfavgU8Bdye5CXgGuL5tux+4DhgDXgQ+DFBVR5J8Ani0tft4VR1pyzcDnwOWA19uD0nSHJkyDKrqf9L7uD7A1T3aF3DLJPvaBezqUR8FLp+qL5KkwfAKZEmSYSBJMgwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJC9I5k3yLzGT1Gb/fYHYrSZqJ1y3t/et5svpMGQaStAD98Ngr06rPlGEgSQvQxSuWT6s+U4aBJC1A2zeuY/myJa+pLV+2hO0b1w3k/ZYOZK+SpBnZcsUqAHaM7OfQ0Ze4eMVytm9c92p9thkGkrRAbbli1cB++Z/Mw0SSpKnDIMmuJIeTfLur9uYke5McaM/nt3qS3J5kLMljSa7ses3W1v5Akq1d9Xcneby95vYkAzqLVpI0mX4+GXwO2HRS7VbggapaCzzQ1gGuBda2xzbgs9AJD+A24D3AVcBtJwKktdnW9bqT30uSNGBThkFVfRU4clJ5M7C7Le8GtnTV76yOh4EVSS4CNgJ7q+pIVT0P7AU2tW3nVdXXqqqAO7v2JUmaI2c6Z/DWqnoOoD1f2OqrgGe72o232unq4z3qPSXZlmQ0yejExMQZdl2SdLLZnkDudby/zqDeU1XtrKr1VbV+5cqVZ9hFSdLJzjQMvt8O8dCeD7f6OHBJV7vVwKEp6qt71CVJc+hMw2APcOKMoK3AfV31G9tZRRuAF9phpBHgmiTnt4nja4CRtu0HSTa0s4hu7NqXJGmOTHnRWZI/A34ZuCDJOJ2zgj4F3J3kJuAZ4PrW/H7gOmAMeBH4MEBVHUnyCeDR1u7jVXViUvpmOmcsLQe+3B6SpDk0ZRhU1Ycm2XR1j7YF3DLJfnYBu3rUR4HLp+qHJGlwvAJZkmQYSJIMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgSWIBhUGSTUn2JxlLcut890eShsmCCIMkS4DPANcClwEfSnLZ/PZKkobHgggD4CpgrKqerqofA3cBm+e5T5I0NBZKGKwCnu1aH2+110iyLcloktGJiYkzeqPvfepXp1WXpGGwdL470KRHrU4pVO0EdgKsX7/+lO398he/JL3WQvlkMA5c0rW+Gjg0T32RpKGzUMLgUWBtkkuTnAvcAOyZ5z5J0tBYEIeJqurlJB8BRoAlwK6qemKeuyVJQ2NBhAFAVd0P3D/f/ZCkYbRQDhNJkuZRqs74pJx5lWQC+OsZ7uYC4G9moTuLheM9uznes9dsjfVnqmplrw2LNgxmQ5LRqlo/3/2YK4737OZ4z15zMVYPE0mSDANJkmGwc747MMcc79nN8Z69Bj7WoZ4zkCR1DPsnA0kShoEkiSEJg6m+RS3J65J8oW1/JMmaue/l7OljvP8iyZNJHkvyQJKfmY9+zpZ+vyUvyQeTVJJFfTpiP+NN8g/bv/ETSf50rvs4W/r4Wf57SR5Ksq/9PF83H/2cLUl2JTmc5NuTbE+S29t/j8eSXDlrb15VZ/WDzr2O/gr4WeBc4FvAZSe1+afAH7blG4AvzHe/Bzze9wFvaMs3n+3jbe3eCHwVeBhYP9/9HvC/71pgH3B+W79wvvs9wLHuBG5uy5cB35vvfs9wzL8EXAl8e5Lt1wFfpnPb/w3AI7P13sPwyaCfb1HbDOxuy/cAVyfp9R0Li8GU462qh6rqxbb6MJ1bhi9W/X5L3ieAfwv8cC47NwD9jPefAJ+pqucBqurwHPdxtvQz1gLOa8tvYpHf+r6qvgocOU2TzcCd1fEwsCLJRbPx3sMQBv18i9qrbarqZeAF4C1z0rvZ19e3xnW5ic5fGovVlONNcgVwSVV9aS47NiD9/Pv+PPDzSf5XkoeTbJqz3s2ufsb6O8CvJxmnc6PL35ybrs2b6f7/3bcFc9fSAernW9T6+qa1RaLvsST5dWA98PcH2qPBOu14k5wDfBr4jbnq0ID18++7lM6hol+m86nvfyS5vKqODrhvs62fsX4I+FxV/bskvwh8vo31lcF3b14M7HfVMHwy6Odb1F5tk2QpnY+bp/uotpD19a1xSX4F+DfAB6rqR3PUt0GYarxvBC4HvpLke3SOs+5ZxJPI/f4831dVx6rqu8B+OuGw2PQz1puAuwGq6mvA6+nc1O1sNbBvhRyGMOjnW9T2AFvb8geBB6vN1ixCU463HTb5IzpBsFiPJ59w2vFW1QtVdUFVramqNXTmSD5QVaPz090Z6+fn+V46JwmQ5AI6h42entNezo5+xvoMcDVAkrfTCYOJOe3l3NoD3NjOKtoAvFBVz83Gjs/6w0Q1ybeoJfk4MFpVe4A76Hy8HKPzieCG+evxzPQ53h3ATwP/pc2TP1NVH5i3Ts9An+M9a/Q53hHgmiRPAseB7VX1t/PX6zPT51h/G/hPSf45ncMlv7GI/5AjyZ/RObx3QZsHuQ1YBlBVf0hnXuQ6YAx4EfjwrL33Iv7vJkmaJcNwmEiSNAXDQJJkGEiSDANJEoaBJAnDQJKEYSBJAv4/pDdwaOk1p50AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x='smoker_yes',y='charges',data=df1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['age', 'bmi', 'children', 'charges', 'sex_female', 'sex_male',\n",
       "       'smoker_no', 'smoker_yes', 'region_northeast', 'region_northwest',\n",
       "       'region_southeast', 'region_southwest'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "age (0.2990081933306476, 4.8866933317203816e-29)\n",
      "bmi (0.1983409688336288, 2.459085535117846e-13)\n",
      "children (0.0679982268479048, 0.012852128520141125)\n",
      "charges (1.0, 0.0)\n",
      "sex_female (-0.05729206220202537, 0.036132721005947124)\n",
      "sex_male (0.05729206220202536, 0.03613272100594507)\n",
      "smoker_no (-0.7872514304984773, 8.27143584217778e-283)\n",
      "smoker_yes (0.7872514304984775, 8.271435842176839e-283)\n",
      "region_northeast (0.0063487712801560715, 0.8165263815343915)\n",
      "region_northwest (-0.039904864040438, 0.14459698799369963)\n",
      "region_southeast (0.07398155156575978, 0.006782698910660704)\n",
      "region_southwest (-0.043210028991684725, 0.11414659361888743)\n"
     ]
    }
   ],
   "source": [
    "import scipy as sp\n",
    "for col in df1.columns:\n",
    "    p_val=sp.stats.pearsonr(df1[col],df1[\"charges\"])\n",
    "    print(col,p_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import linear_model\n",
    "Regr=linear_model.LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "y=df1.charges"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=df1.drop('charges',axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Regr.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_hat=Regr.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9      28923.13692\n",
       "382    20781.48892\n",
       "394     9411.00500\n",
       "836     4402.23300\n",
       "34     51194.55914\n",
       "Name: charges, dtype: float64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([12061.48634831, 12397.77400503, 11505.28063754,  7242.47792717,\n",
       "       30433.02392943])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_hat[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "36104033.66548191"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "mean_squared_error(y_test,y_hat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8077479719699141"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import r2_score\n",
    "r2_score(y_test,y_hat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras import datasets,layers,models\n",
    "from tensorflow import keras\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/500\n",
      "34/34 [==============================] - 1s 2ms/step - loss: 310199876.5714\n",
      "Epoch 2/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 304508398.6286\n",
      "Epoch 3/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 295740917.9429\n",
      "Epoch 4/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 273178713.1429\n",
      "Epoch 5/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 315428730.5143\n",
      "Epoch 6/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 319251829.9429\n",
      "Epoch 7/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 272918514.2857\n",
      "Epoch 8/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 278303664.4571\n",
      "Epoch 9/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 262337101.2571\n",
      "Epoch 10/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 250485380.5714\n",
      "Epoch 11/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 275227797.9429\n",
      "Epoch 12/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 235433099.8857\n",
      "Epoch 13/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 222632518.4000\n",
      "Epoch 14/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 194599225.6000\n",
      "Epoch 15/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 185767621.9429\n",
      "Epoch 16/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 178023961.1429\n",
      "Epoch 17/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 144055710.6286\n",
      "Epoch 18/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 148098678.1714\n",
      "Epoch 19/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 139297819.6571\n",
      "Epoch 20/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 123264718.4000\n",
      "Epoch 21/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 120697244.3429\n",
      "Epoch 22/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 126291082.5143\n",
      "Epoch 23/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 123805981.7143\n",
      "Epoch 24/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 114544378.7429\n",
      "Epoch 25/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 116361866.9714\n",
      "Epoch 26/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 126213226.5143\n",
      "Epoch 27/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 120470698.9714\n",
      "Epoch 28/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 120153551.0857\n",
      "Epoch 29/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 121966644.8000\n",
      "Epoch 30/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 124132482.2857\n",
      "Epoch 31/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 114738016.9143\n",
      "Epoch 32/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 119621927.5429\n",
      "Epoch 33/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 117721074.9714\n",
      "Epoch 34/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 119573594.7429\n",
      "Epoch 35/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 116047244.5714\n",
      "Epoch 36/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 123203924.1143\n",
      "Epoch 37/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 121945884.8000\n",
      "Epoch 38/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 114945004.8000\n",
      "Epoch 39/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 117135560.4571\n",
      "Epoch 40/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 117639721.8286\n",
      "Epoch 41/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 126479107.2000\n",
      "Epoch 42/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 123631785.6000\n",
      "Epoch 43/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 116710771.2000\n",
      "Epoch 44/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 126221314.2857\n",
      "Epoch 45/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 109978034.5143\n",
      "Epoch 46/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 123080970.7429\n",
      "Epoch 47/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 123263443.2000\n",
      "Epoch 48/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 117994569.3714\n",
      "Epoch 49/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 124181142.4000\n",
      "Epoch 50/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 117858587.4286\n",
      "Epoch 51/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 110898338.7429\n",
      "Epoch 52/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 122575660.3429\n",
      "Epoch 53/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 121609157.2571\n",
      "Epoch 54/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 114952299.6571\n",
      "Epoch 55/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 119967346.9714\n",
      "Epoch 56/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 118638530.2857\n",
      "Epoch 57/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 123695274.5143\n",
      "Epoch 58/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 121658128.2286\n",
      "Epoch 59/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 113579442.2857\n",
      "Epoch 60/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 121906213.2571\n",
      "Epoch 61/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 121999549.4857\n",
      "Epoch 62/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 112135089.3714\n",
      "Epoch 63/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 116277998.6286\n",
      "Epoch 64/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 117367896.6857\n",
      "Epoch 65/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 110911053.0286\n",
      "Epoch 66/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 121208240.2286\n",
      "Epoch 67/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 120010706.0571\n",
      "Epoch 68/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 118210456.4571\n",
      "Epoch 69/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 113339012.3429\n",
      "Epoch 70/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 115402220.8000\n",
      "Epoch 71/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 128165664.4571\n",
      "Epoch 72/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 113554905.3714\n",
      "Epoch 73/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 110318341.9429\n",
      "Epoch 74/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108355766.1714\n",
      "Epoch 75/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 111368731.2000\n",
      "Epoch 76/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 113918687.7714\n",
      "Epoch 77/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 124064205.2571\n",
      "Epoch 78/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 123500281.1429\n",
      "Epoch 79/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 129073313.3714\n",
      "Epoch 80/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 117948187.4286\n",
      "Epoch 81/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 116081804.1143\n",
      "Epoch 82/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 113735020.3429\n",
      "Epoch 83/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 119073330.5143\n",
      "Epoch 84/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 117010579.6571\n",
      "Epoch 85/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 117682297.1429\n",
      "Epoch 86/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 117512616.6857\n",
      "Epoch 87/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 122070800.2286\n",
      "Epoch 88/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 113690165.4857\n",
      "Epoch 89/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 109063221.9429\n",
      "Epoch 90/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 111631011.6571\n",
      "Epoch 91/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 111326092.1143\n",
      "Epoch 92/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 104240742.1714\n",
      "Epoch 93/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 103041241.3714\n",
      "Epoch 94/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 116353809.3714\n",
      "Epoch 95/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108776291.3143\n",
      "Epoch 96/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 122387427.4286\n",
      "Epoch 97/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 111510116.1143\n",
      "Epoch 98/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 117760326.8571\n",
      "Epoch 99/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 105406465.6000\n",
      "Epoch 100/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 122610384.0000\n",
      "Epoch 101/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 124466164.8000\n",
      "Epoch 102/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 111850271.3143\n",
      "Epoch 103/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 114725684.5714\n",
      "Epoch 104/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108980310.1714\n",
      "Epoch 105/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 113321850.5143\n",
      "Epoch 106/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 106836967.3143\n",
      "Epoch 107/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 109435915.2000\n",
      "Epoch 108/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 109463845.4857\n",
      "Epoch 109/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 107068068.5714\n",
      "Epoch 110/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 102393745.0286\n",
      "Epoch 111/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 101658335.7714\n",
      "Epoch 112/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 121178855.5429\n",
      "Epoch 113/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108516505.1429\n",
      "Epoch 114/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 114319362.5143\n",
      "Epoch 115/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 111208442.7429\n",
      "Epoch 116/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 112430606.6286\n",
      "Epoch 117/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 110661110.8571\n",
      "Epoch 118/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 107825933.2571\n",
      "Epoch 119/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108774576.4571\n",
      "Epoch 120/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 110235200.6857\n",
      "Epoch 121/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 106931931.6571\n",
      "Epoch 122/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 109056926.4000\n",
      "Epoch 123/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 112587715.6571\n",
      "Epoch 124/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108938322.0571\n",
      "Epoch 125/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 120035882.7429\n",
      "Epoch 126/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 119859972.5714\n",
      "Epoch 127/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 121431411.4286\n",
      "Epoch 128/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 105415005.9429\n",
      "Epoch 129/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 112228902.6286\n",
      "Epoch 130/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 106462767.3143\n",
      "Epoch 131/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 106901463.0857\n",
      "Epoch 132/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 110822886.6286\n",
      "Epoch 133/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 99504462.1714\n",
      "Epoch 134/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 109563541.0286\n",
      "Epoch 135/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 104942660.8000\n",
      "Epoch 136/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 105622441.1429\n",
      "Epoch 137/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108760665.8286\n",
      "Epoch 138/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 104977931.6571\n",
      "Epoch 139/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 114655494.6286\n",
      "Epoch 140/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 91657920.3429\n",
      "Epoch 141/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 106427874.2857\n",
      "Epoch 142/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108643851.2000\n",
      "Epoch 143/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 104837957.0286\n",
      "Epoch 144/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 105788030.4000\n",
      "Epoch 145/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 111415761.6000\n",
      "Epoch 146/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 105727674.9714\n",
      "Epoch 147/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 100145619.4286\n",
      "Epoch 148/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 114945897.6000\n",
      "Epoch 149/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 109454062.8571\n",
      "Epoch 150/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 113339045.9429\n",
      "Epoch 151/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 103437378.5143\n",
      "Epoch 152/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 109507271.7714\n",
      "Epoch 153/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 111220603.6571\n",
      "Epoch 154/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 103525378.1714\n",
      "Epoch 155/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 100677455.5429\n",
      "Epoch 156/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 104632249.1429\n",
      "Epoch 157/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 108410104.2286\n",
      "Epoch 158/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 97739060.8000\n",
      "Epoch 159/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 100233148.1143\n",
      "Epoch 160/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 102669249.1429\n",
      "Epoch 161/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 99987202.2857\n",
      "Epoch 162/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 101991977.6000\n",
      "Epoch 163/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 102946114.7429\n",
      "Epoch 164/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 95721090.9714\n",
      "Epoch 165/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 102895992.6857\n",
      "Epoch 166/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 102554708.8000\n",
      "Epoch 167/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 99784393.3714\n",
      "Epoch 168/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 98693342.4000\n",
      "Epoch 169/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 103272240.9143\n",
      "Epoch 170/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 96339002.1714\n",
      "Epoch 171/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 91252023.7714\n",
      "Epoch 172/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 98292279.0857\n",
      "Epoch 173/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 96458371.4286\n",
      "Epoch 174/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 90338681.7143\n",
      "Epoch 175/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 99884808.5714\n",
      "Epoch 176/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 104378426.0571\n",
      "Epoch 177/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 92985381.2571\n",
      "Epoch 178/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 95539994.9714\n",
      "Epoch 179/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 100641697.8286\n",
      "Epoch 180/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 94099002.7429\n",
      "Epoch 181/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 103899688.2286\n",
      "Epoch 182/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 94089298.5143\n",
      "Epoch 183/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 106426277.9429\n",
      "Epoch 184/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 96159889.4857\n",
      "Epoch 185/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 102200413.0286\n",
      "Epoch 186/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 94806847.3143\n",
      "Epoch 187/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 98192530.5143\n",
      "Epoch 188/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 85263612.1143\n",
      "Epoch 189/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 100052575.7714\n",
      "Epoch 190/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 99556485.0286\n",
      "Epoch 191/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 99804798.0571\n",
      "Epoch 192/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 92566571.8857\n",
      "Epoch 193/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 87189287.0857\n",
      "Epoch 194/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 89070351.3143\n",
      "Epoch 195/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 87609182.4000\n",
      "Epoch 196/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 91253267.6571\n",
      "Epoch 197/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 103926450.9714\n",
      "Epoch 198/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 93924062.4000\n",
      "Epoch 199/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 91296963.6571\n",
      "Epoch 200/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 86567182.8571\n",
      "Epoch 201/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 89912628.1143\n",
      "Epoch 202/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 97804039.7714\n",
      "Epoch 203/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 82824919.3143\n",
      "Epoch 204/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 93108525.7143\n",
      "Epoch 205/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 88346905.1429\n",
      "Epoch 206/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 82179357.7143\n",
      "Epoch 207/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 92767608.9143\n",
      "Epoch 208/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 86775229.2571\n",
      "Epoch 209/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 83997286.6286\n",
      "Epoch 210/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 90318636.8000\n",
      "Epoch 211/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 77715306.7429\n",
      "Epoch 212/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 79866667.5429\n",
      "Epoch 213/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 88540554.5143\n",
      "Epoch 214/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 75983950.0571\n",
      "Epoch 215/500\n",
      "34/34 [==============================] - ETA: 0s - loss: 92519920.00 - 0s 1ms/step - loss: 82860898.7429\n",
      "Epoch 216/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 81506205.1429\n",
      "Epoch 217/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 81074694.1714\n",
      "Epoch 218/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 83318056.4571\n",
      "Epoch 219/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 85296287.7714\n",
      "Epoch 220/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 81982254.4000\n",
      "Epoch 221/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 81935586.5143\n",
      "Epoch 222/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 75011092.3429\n",
      "Epoch 223/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 72210973.2571\n",
      "Epoch 224/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 83312942.4000\n",
      "Epoch 225/500\n",
      "34/34 [==============================] - 0s 4ms/step - loss: 73962044.0000\n",
      "Epoch 226/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 69981568.3429\n",
      "Epoch 227/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 77871464.0000\n",
      "Epoch 228/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 69732589.3714\n",
      "Epoch 229/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 66608770.0000\n",
      "Epoch 230/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 82010925.2571\n",
      "Epoch 231/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 71180674.1714\n",
      "Epoch 232/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 70612913.3714\n",
      "Epoch 233/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 63515724.5714\n",
      "Epoch 234/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 76697598.6286\n",
      "Epoch 235/500\n",
      "34/34 [==============================] - 0s 4ms/step - loss: 66174607.4286\n",
      "Epoch 236/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 74075601.7143\n",
      "Epoch 237/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 69803551.2000\n",
      "Epoch 238/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 64032709.7143\n",
      "Epoch 239/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 61857440.3429\n",
      "Epoch 240/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 66883645.4857\n",
      "Epoch 241/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 62086910.2857\n",
      "Epoch 242/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 67594518.6286\n",
      "Epoch 243/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 63663418.1714\n",
      "Epoch 244/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 67259184.5714\n",
      "Epoch 245/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 62216580.1143\n",
      "Epoch 246/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 55711388.2286\n",
      "Epoch 247/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 53935081.6000\n",
      "Epoch 248/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 61837880.9143\n",
      "Epoch 249/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 57570845.7143\n",
      "Epoch 250/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 58216232.0000\n",
      "Epoch 251/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 57053102.0571\n",
      "Epoch 252/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 58057805.1429\n",
      "Epoch 253/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 53727826.7429\n",
      "Epoch 254/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 60200129.3714\n",
      "Epoch 255/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 57604938.0571\n",
      "Epoch 256/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 53615078.0571\n",
      "Epoch 257/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 49569492.9143\n",
      "Epoch 258/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 50301825.6000\n",
      "Epoch 259/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 50896878.5143\n",
      "Epoch 260/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 49705030.2857\n",
      "Epoch 261/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 49215888.3429\n",
      "Epoch 262/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 44908260.4571\n",
      "Epoch 263/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 47295330.9714\n",
      "Epoch 264/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 50656028.1143\n",
      "Epoch 265/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 47092702.7429\n",
      "Epoch 266/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 49066976.8000\n",
      "Epoch 267/500\n",
      "34/34 [==============================] - ETA: 0s - loss: 44686992.00 - 0s 1ms/step - loss: 45397100.9143\n",
      "Epoch 268/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 47956004.3429\n",
      "Epoch 269/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 49769206.6286\n",
      "Epoch 270/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 45009407.6571\n",
      "Epoch 271/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 43885937.7143\n",
      "Epoch 272/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 46605295.8857\n",
      "Epoch 273/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 48898659.2000\n",
      "Epoch 274/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 43474065.7143\n",
      "Epoch 275/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 47955332.0000\n",
      "Epoch 276/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 42874968.4571\n",
      "Epoch 277/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 43664452.6286\n",
      "Epoch 278/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 40093649.8286\n",
      "Epoch 279/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 40826820.9143\n",
      "Epoch 280/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 41437878.7429\n",
      "Epoch 281/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38367682.3429\n",
      "Epoch 282/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 41189190.0571\n",
      "Epoch 283/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 42671658.1714\n",
      "Epoch 284/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 40163658.8571\n",
      "Epoch 285/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 41496883.7714\n",
      "Epoch 286/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 40085033.1429\n",
      "Epoch 287/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38477941.3714\n",
      "Epoch 288/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39647572.6286\n",
      "Epoch 289/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37184049.0857\n",
      "Epoch 290/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 41860373.7143\n",
      "Epoch 291/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40771831.3714\n",
      "Epoch 292/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38564993.6000\n",
      "Epoch 293/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38132123.1429\n",
      "Epoch 294/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38602961.4857\n",
      "Epoch 295/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 42560590.7429\n",
      "Epoch 296/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37373909.0857\n",
      "Epoch 297/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37299662.8000\n",
      "Epoch 298/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40754874.8571\n",
      "Epoch 299/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39632674.8000\n",
      "Epoch 300/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 37068224.4000\n",
      "Epoch 301/500\n",
      "34/34 [==============================] - 0s 5ms/step - loss: 38291956.9143\n",
      "Epoch 302/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 43604035.3143\n",
      "Epoch 303/500\n",
      "34/34 [==============================] - ETA: 0s - loss: 41719839.53 - 0s 2ms/step - loss: 40765071.0857\n",
      "Epoch 304/500\n",
      "34/34 [==============================] - ETA: 0s - loss: 36220490.00 - 0s 2ms/step - loss: 36751329.4286\n",
      "Epoch 305/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 45128457.2571\n",
      "Epoch 306/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38910667.3143\n",
      "Epoch 307/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 42695969.2571\n",
      "Epoch 308/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38871945.0857\n",
      "Epoch 309/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39626039.2000\n",
      "Epoch 310/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40003098.2857\n",
      "Epoch 311/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36474073.5429\n",
      "Epoch 312/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38937960.2286\n",
      "Epoch 313/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37248760.4571\n",
      "Epoch 314/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36806633.6571\n",
      "Epoch 315/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36058175.2571\n",
      "Epoch 316/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37418171.4286\n",
      "Epoch 317/500\n",
      "34/34 [==============================] - ETA: 0s - loss: 40822037.00 - 0s 2ms/step - loss: 40216809.2571\n",
      "Epoch 318/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40804304.9143\n",
      "Epoch 319/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 41756196.4571\n",
      "Epoch 320/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39457380.6857\n",
      "Epoch 321/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34667992.8571\n",
      "Epoch 322/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38552640.3429\n",
      "Epoch 323/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37952256.5143\n",
      "Epoch 324/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35108328.9143\n",
      "Epoch 325/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36729270.8000\n",
      "Epoch 326/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35516407.1429\n",
      "Epoch 327/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 33882407.2571\n",
      "Epoch 328/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36801351.5429\n",
      "Epoch 329/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40406126.8000\n",
      "Epoch 330/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40079842.6286\n",
      "Epoch 331/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36625217.7714\n",
      "Epoch 332/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 33591511.8286\n",
      "Epoch 333/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37878366.8000\n",
      "Epoch 334/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35835661.9429\n",
      "Epoch 335/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38822984.4571\n",
      "Epoch 336/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34724334.3714\n",
      "Epoch 337/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34632203.1714\n",
      "Epoch 338/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39043686.1143\n",
      "Epoch 339/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35918253.3143\n",
      "Epoch 340/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37865006.9714\n",
      "Epoch 341/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36081342.9143\n",
      "Epoch 342/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36421074.1143\n",
      "Epoch 343/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 33551862.9714\n",
      "Epoch 344/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35062784.8000\n",
      "Epoch 345/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 39577515.8857\n",
      "Epoch 346/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39620442.0571\n",
      "Epoch 347/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36984480.2286\n",
      "Epoch 348/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 32683292.5714\n",
      "Epoch 349/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 41556414.4000\n",
      "Epoch 350/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36218777.6000\n",
      "Epoch 351/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36716331.5429\n",
      "Epoch 352/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 34740148.2286\n",
      "Epoch 353/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38176828.2857\n",
      "Epoch 354/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34757046.4000\n",
      "Epoch 355/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37107715.5429\n",
      "Epoch 356/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34710485.7714\n",
      "Epoch 357/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35807179.6000\n",
      "Epoch 358/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 33242454.9714\n",
      "Epoch 359/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37522736.1143\n",
      "Epoch 360/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36708481.3143\n",
      "Epoch 361/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 32420272.7429\n",
      "Epoch 362/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34909669.7714\n",
      "Epoch 363/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36373083.8857\n",
      "Epoch 364/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36003846.1714\n",
      "Epoch 365/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35899686.2857\n",
      "Epoch 366/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38663384.2286\n",
      "Epoch 367/500\n",
      "34/34 [==============================] - ETA: 0s - loss: 47180524.00 - 0s 1ms/step - loss: 36554127.6571\n",
      "Epoch 368/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 33437294.1714\n",
      "Epoch 369/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37768291.0286\n",
      "Epoch 370/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39101911.7714\n",
      "Epoch 371/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36747829.6571\n",
      "Epoch 372/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36311328.4000\n",
      "Epoch 373/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35981041.0286\n",
      "Epoch 374/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35260592.9143\n",
      "Epoch 375/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36891640.2857\n",
      "Epoch 376/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 39584848.3429\n",
      "Epoch 377/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36973863.3714\n",
      "Epoch 378/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39730239.5429\n",
      "Epoch 379/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37193309.1429\n",
      "Epoch 380/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37321682.4000\n",
      "Epoch 381/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 42045818.2857\n",
      "Epoch 382/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37183393.4286\n",
      "Epoch 383/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 34663067.0286\n",
      "Epoch 384/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36814388.1714\n",
      "Epoch 385/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37942193.4857\n",
      "Epoch 386/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37502921.9429\n",
      "Epoch 387/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35380912.6286\n",
      "Epoch 388/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39526806.5143\n",
      "Epoch 389/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 34953776.2286\n",
      "Epoch 390/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36459441.4286\n",
      "Epoch 391/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35046784.4571\n",
      "Epoch 392/500\n",
      "34/34 [==============================] - ETA: 0s - loss: 55519864.00 - 0s 1ms/step - loss: 36525804.2286\n",
      "Epoch 393/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38055207.1429\n",
      "Epoch 394/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38524834.2857\n",
      "Epoch 395/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38191306.9714\n",
      "Epoch 396/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37525266.7429\n",
      "Epoch 397/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 39458290.2857\n",
      "Epoch 398/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37884916.7429\n",
      "Epoch 399/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 41271786.7429\n",
      "Epoch 400/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38389610.8571\n",
      "Epoch 401/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 32792675.4857\n",
      "Epoch 402/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38813806.2857\n",
      "Epoch 403/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36795484.4571\n",
      "Epoch 404/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38969261.2571\n",
      "Epoch 405/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36997026.1143\n",
      "Epoch 406/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35185377.4857\n",
      "Epoch 407/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35824934.9714\n",
      "Epoch 408/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35697425.3143\n",
      "Epoch 409/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35367431.0286\n",
      "Epoch 410/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37391033.4857\n",
      "Epoch 411/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38293946.0571\n",
      "Epoch 412/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39503012.1143\n",
      "Epoch 413/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 32692252.9143\n",
      "Epoch 414/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 41110905.4857\n",
      "Epoch 415/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 32004790.9714\n",
      "Epoch 416/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 39590028.4571\n",
      "Epoch 417/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38830807.3143\n",
      "Epoch 418/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37258588.9143\n",
      "Epoch 419/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 33911340.0571\n",
      "Epoch 420/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35666183.3714\n",
      "Epoch 421/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 40557154.0571\n",
      "Epoch 422/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37241876.0000\n",
      "Epoch 423/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37357539.6571\n",
      "Epoch 424/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35104992.8000\n",
      "Epoch 425/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 34553872.4571\n",
      "Epoch 426/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38310150.8571\n",
      "Epoch 427/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34242337.6571\n",
      "Epoch 428/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 43484174.1714\n",
      "Epoch 429/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38329904.8000\n",
      "Epoch 430/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35939939.3714\n",
      "Epoch 431/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37072871.1429\n",
      "Epoch 432/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37387219.0857\n",
      "Epoch 433/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35081124.8571\n",
      "Epoch 434/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36103301.2000\n",
      "Epoch 435/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 41976729.4857\n",
      "Epoch 436/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38501983.7714\n",
      "Epoch 437/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 34545735.3714\n",
      "Epoch 438/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37158493.9429\n",
      "Epoch 439/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38914949.8286\n",
      "Epoch 440/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38915323.7714\n",
      "Epoch 441/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36335245.5429\n",
      "Epoch 442/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35801479.4286\n",
      "Epoch 443/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34653708.1714\n",
      "Epoch 444/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36803678.3429\n",
      "Epoch 445/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35917458.0571\n",
      "Epoch 446/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40473274.0571\n",
      "Epoch 447/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37302590.1714\n",
      "Epoch 448/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34878540.0000\n",
      "Epoch 449/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38427597.8286\n",
      "Epoch 450/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36932137.0857\n",
      "Epoch 451/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38657805.0286\n",
      "Epoch 452/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36446441.6571\n",
      "Epoch 453/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 38418488.5714\n",
      "Epoch 454/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 32566053.6571\n",
      "Epoch 455/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37177587.4286\n",
      "Epoch 456/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38475843.8857\n",
      "Epoch 457/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36269189.6000\n",
      "Epoch 458/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35084264.5143\n",
      "Epoch 459/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37223884.2857\n",
      "Epoch 460/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35825644.4571\n",
      "Epoch 461/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36212528.7429\n",
      "Epoch 462/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37352509.7714\n",
      "Epoch 463/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36434832.1714\n",
      "Epoch 464/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 33752913.6000\n",
      "Epoch 465/500\n",
      "34/34 [==============================] - 0s 3ms/step - loss: 35812109.8857\n",
      "Epoch 466/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35696776.4000\n",
      "Epoch 467/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38225724.1143\n",
      "Epoch 468/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37128609.6000\n",
      "Epoch 469/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 39326315.7714\n",
      "Epoch 470/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37857252.1143\n",
      "Epoch 471/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34578435.7714\n",
      "Epoch 472/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37070412.4571\n",
      "Epoch 473/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 36078178.1714\n",
      "Epoch 474/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 42023914.5143\n",
      "Epoch 475/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 39864803.4286\n",
      "Epoch 476/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 34813687.4286\n",
      "Epoch 477/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39068701.4857\n",
      "Epoch 478/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38133844.4571\n",
      "Epoch 479/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 39736163.4286\n",
      "Epoch 480/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35418179.5429\n",
      "Epoch 481/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 34687213.3714\n",
      "Epoch 482/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36352706.9143\n",
      "Epoch 483/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 38623577.6000\n",
      "Epoch 484/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37711234.8571\n",
      "Epoch 485/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35035328.8571\n",
      "Epoch 486/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34449156.9714\n",
      "Epoch 487/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37067650.5143\n",
      "Epoch 488/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 40346436.0571\n",
      "Epoch 489/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 32361148.8571\n",
      "Epoch 490/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37955177.3714\n",
      "Epoch 491/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37295704.8571\n",
      "Epoch 492/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34446817.8857\n",
      "Epoch 493/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36531532.2286\n",
      "Epoch 494/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 35382586.6286\n",
      "Epoch 495/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 34943593.2571\n",
      "Epoch 496/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36019983.6000\n",
      "Epoch 497/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 37359644.6857\n",
      "Epoch 498/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 35615266.2286\n",
      "Epoch 499/500\n",
      "34/34 [==============================] - 0s 2ms/step - loss: 36210294.6286\n",
      "Epoch 500/500\n",
      "34/34 [==============================] - 0s 1ms/step - loss: 37476963.6571\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<tensorflow.python.keras.callbacks.History at 0x188530eba08>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ANN = keras.Sequential ([\n",
    "    keras.layers.Dense(11,input_dim=11, kernel_initializer='normal'),\n",
    "    keras.layers.Dense(11,kernel_initializer='normal'),\n",
    "    keras.layers.Dense(1,kernel_initializer='normal')\n",
    "    ])\n",
    "ANN.compile(optimizer='adam',\n",
    "            loss='mean_squared_error'\n",
    "           )\n",
    "ANN.fit(x_train,y_train,epochs=500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
